apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = "com.github.urizev"

android {
    publishNonDefault true

    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintConfig file('../lint.xml')
        abortOnError false
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.google.guava:guava:$guavaVersion-android"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "com.hannesdorfmann:adapterdelegates3:$adapterdelegatesVersion";
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    compileOnly "com.google.auto.value:auto-value:$autovalueVersion"
    compileOnly "com.ryanharter.auto.value:auto-value-moshi-annotations:$autovaluemoshiVersion"

    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.auto.value:auto-value:$autovalueVersion"
    annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:$autovaluemoshiVersion"

    testImplementation "junit:junit:$junitVersion"

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.getDestinationDir()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}